<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>Antivirus</web>
  <name>AntivirusLogLiveTableResults</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1540303015000</creationDate>
  <parent>Antivirus.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1540841579000</date>
  <contentUpdateDate>1540572594000</contentUpdateDate>
  <version>1.1</version>
  <title>$services.localization.render('platform.livetable.results')</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.0</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="XWiki.LiveTableResultsMacros" /}}

{{velocity wiki="false"}}
#set ($extra = '')
#set ($params = [])
#if ("$!request.space" != '')
  #set ($extra = "${extra} and doc.space = ?")
  #set ($discard = $params.add($request.space))
#end
#if ("$!request.parent" != '')
  #set ($extra = "${extra} and doc.parent = ?")
  #set ($discard = $params.add($request.parent))
#end
#if ("$!request.orphaned" == '1')
  #set ($homepage = $services.wiki.getById($services.wiki.currentWikiId).mainPageReference)
  #set ($homepageFullName = $services.model.serialize($homepage, 'local'))
  ## On Oracle the empty parent is actually null.
  #set ($extra = "${extra} and (doc.parent = '' or doc.parent is null) and doc.fullName &lt;&gt; ?")
  #set ($discard = $params.add($homepageFullName))
#end
#if($xcontext.action == 'get' &amp;&amp; "$!{request.outputSyntax}" == 'plain')
  $response.setContentType('application/json')
  ## Build the JSON in memory (using basic Java data types) so that it can be adjusted before serialization.
  #set($map = {})
  #gridresultwithfilter_buildJSON("$!request.classname" $request.collist.split(',') '' "${extra}" $params $map)

  #foreach ($row in $map.rows)
    ## Set title and link for the 'attachmentDocument' column.
    #set ($attachmentDoc = $xwiki.getDocument($row.get('attachmentDocument_value')))
    #set ($attachmentDocTitle = $attachmentDoc.plainTitle)
    #if ($attachmentDoc.isNew())
      #set ($attachmentDocTitle = "$attachmentDocTitle $services.localization.render('antivirus.log.deletedMarker')")
    #end
    #set ($discard = $row.put('attachmentDocument', $attachmentDocTitle))
    #set ($discard = $row.put('attachmentDocument_url', $attachmentDoc.getURL()))
  #end

  ## Serialize the result.
  $jsontool.serialize($map)
#end
{{/velocity}}</content>
</xwikidoc>
